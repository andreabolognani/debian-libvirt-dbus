From: =?utf-8?q?J=C3=A1n_Tomko?= <jtomko@redhat.com>
Date: Tue, 6 Oct 2020 09:41:33 +0200
Subject: Handle APIs returning unsigned long correctly
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

Some libvirt functions return 'unsigned long' but the dbus
type we return is 't' aka uint64.

Otherwise we might print some garbage on 32-bit platforms
(like armhf):
  17830927092969874672
instead of:
               6006000

Signed-off-by: JÃ¡n Tomko <jtomko@redhat.com>
Reported-by: Christian Ehrhardt <christian.ehrhardt@canonical.com>
(cherry picked from commit 0422b22fb1f49a76844729eb6f6138e5a756ffc3)
---
 src/connect.c | 12 ++++++++----
 src/domain.c  |  6 ++++--
 2 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/src/connect.c b/src/connect.c
index b40b0ba..116875f 100644
--- a/src/connect.c
+++ b/src/connect.c
@@ -174,14 +174,16 @@ virtDBusConnectGetLibVersion(const gchar *objectPath G_GNUC_UNUSED,
                              GError **error)
 {
     virtDBusConnect *connect = userData;
-    gulong libVer;
+    gulong tmp;
+    guint64 libVer;
 
     if (!virtDBusConnectOpen(connect, error))
         return;
 
-    if (virConnectGetLibVersion(connect->connection, &libVer) < 0)
+    if (virConnectGetLibVersion(connect->connection, &tmp) < 0)
         return virtDBusUtilSetLastVirtError(error);
 
+    libVer = tmp;
     *value = g_variant_new("t", libVer);
 }
 
@@ -211,14 +213,16 @@ virtDBusConnectGetVersion(const gchar *objectPath G_GNUC_UNUSED,
                           GError **error)
 {
     virtDBusConnect *connect = userData;
-    gulong hvVer;
+    gulong tmp;
+    guint64 hvVer;
 
     if (!virtDBusConnectOpen(connect, error))
         return;
 
-    if (virConnectGetVersion(connect->connection, &hvVer) < 0)
+    if (virConnectGetVersion(connect->connection, &tmp) < 0)
         return virtDBusUtilSetLastVirtError(error);
 
+    hvVer = tmp;
     *value = g_variant_new("t", hvVer);
 }
 
diff --git a/src/domain.c b/src/domain.c
index a656c6a..308cfa3 100644
--- a/src/domain.c
+++ b/src/domain.c
@@ -2108,7 +2108,8 @@ virtDBusDomainMigrateGetMaxSpeed(GVariant *inArgs,
 {
     virtDBusConnect *connect = userData;
     g_autoptr(virDomain) domain = NULL;
-    gulong bandwidth;
+    gulong tmp;
+    guint64 bandwidth;
     guint flags;
 
     g_variant_get(inArgs, "(u)", &flags);
@@ -2117,8 +2118,9 @@ virtDBusDomainMigrateGetMaxSpeed(GVariant *inArgs,
     if (!domain)
         return;
 
-    if (virDomainMigrateGetMaxSpeed(domain, &bandwidth, flags) < 0)
+    if (virDomainMigrateGetMaxSpeed(domain, &tmp, flags) < 0)
         return virtDBusUtilSetLastVirtError(error);
+    bandwidth = tmp;
 
     *outArgs = g_variant_new("(t)", bandwidth);
 }
